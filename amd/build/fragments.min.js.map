{"version":3,"file":"fragments.min.js","sources":["../src/fragments.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n *\n * @module     report_vmoodle\n * @package    report\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n// jshint unused: true, undef:true\ndefine(['jquery', 'core/config', 'core/log'], function ($, cfg, log) {\n\n    var reportfragment = {\n        init: function() {\n\n            // Attach to each expected fragment slot an asynchronous loading.\n            $('.delegated-content').each(function() {\n                // $(this).promise().done(reportfragment.fragmentloader(this));\n                reportfragment.fragmentloader(this);\n            });\n\n            log.debug('ADM Vmoodle Report Report fragment initialized');\n        },\n\n        /*\n         * This function launches asyncronous progressive loading. One instance\n         * of this function gets the content of one content slot.\n         */\n        fragmentloader: function(elm) {\n            var that = $(elm);\n\n            var url = cfg.wwwroot + '/report/vmoodle/ajax/service.php';\n            url += '?what=getfragment';\n            url += '&fragment=' + that.attr('delegated-fragment');\n            url += '&wwwroot=' + that.attr('delegated-context');\n            url += '&filter=' + that.attr('delegated-filter');\n\n            $.get(url, function(data) {\n                var newval;\n                log.debug('Feeding '+'tr[delegated-context=\"' + data.source + '\"]');\n                $('tr[delegated-context=\"' + data.source + '\"]').html(data.html);\n\n                // find sumators and add results in it.\n                for (var field in data.data) {\n                    newval = parseInt($('#sumator-' + field).html());\n                    log.debug('ADM Vmoodle updating field '+ field);\n                    log.debug('ADM origin value '+ newval);\n                    $('#sumator-' + field).html(newval + parseInt(data.data[field]));\n                }\n\n                // sumator-ratios provide formula to refresh their values.\n                // formulas contain non terminal references to sumators ids.\n                $('.sumator-ratio').each(function() {\n                    var that = $(this);\n                    var formula = that.attr('data-formula');\n                    var regexp = new RegExp('(sumator-[a-z]+)', 'g');\n                    var vars = formula.match(regexp);\n                    for (const variable of vars) {\n                        varvalue = parseInt($('#' + variable).html());\n                        log.debug('replacing ' + variable + ' with ' + varvalue);\n                        formula = formula.replace(variable, varvalue);\n                    }\n                    log.debug('formula ' + formula);\n                    var ratioresult = eval(formula);\n                    that.html(ratioresult.toLocaleString(undefined, { \n  minimumFractionDigits: 2, \n  maximumFractionDigits: 2 \n}) + '%');\n                })\n            }, 'json');\n        }\n    };\n\n    return reportfragment;\n});"],"names":["define","$","cfg","log","reportfragment","init","each","fragmentloader","this","debug","elm","that","url","wwwroot","attr","get","data","newval","field","source","html","parseInt","formula","regexp","RegExp","vars","match","_iterator","_createForOfIteratorHelper","_step","s","n","done","variable","value","varvalue","replace","err","e","f","ratioresult","eval","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits"],"mappings":";;;;;;GAsBAA,OAAO,2BAAA,CAAC,SAAU,cAAe,aAAa,SAAUC,EAAGC,IAAKC,KAE5D,IAAIC,eAAiB,CACjBC,KAAM,WAGFJ,EAAE,sBAAsBK,MAAK,WAEzBF,eAAeG,eAAeC,KAClC,IAEAL,IAAIM,MAAM,iDACb,EAMDF,eAAgB,SAASG,eAAAA,KACrB,IAAIC,KAAOV,EAAES,KAETE,IAAMV,IAAIW,QAAU,mCACxBD,KAAO,oBACPA,KAAO,aAAeD,KAAKG,KAAK,sBAChCF,KAAO,YAAcD,KAAKG,KAAK,qBAC/BF,KAAO,WAAaD,KAAKG,KAAK,oBAE9Bb,EAAEc,IAAIH,KAAK,SAASI,MAChB,IAAIC,OAKJ,IAAK,IAAIC,SAJTf,IAAIM,MAAM,iCAAsCO,KAAKG,OAAS,MAC9DlB,EAAE,yBAA2Be,KAAKG,OAAS,MAAMC,KAAKJ,KAAKI,MAGzCJ,KAAKA,KACnBC,OAASI,SAASpB,EAAE,YAAciB,OAAOE,QACzCjB,IAAIM,MAAM,8BAA+BS,OACzCf,IAAIM,MAAM,oBAAqBQ,QAC/BhB,EAAE,YAAciB,OAAOE,KAAKH,OAASI,SAASL,KAAKA,KAAKE,SAK5DjB,EAAE,kBAAkBK,MAAK,WACrB,IAAIK,KAAOV,EAAEO,MACTc,QAAUX,KAAKG,KAAK,gBACpBS,OAAS,IAAIC,OAAO,mBAAoB,KACxCC,KAAOH,QAAQI,MAAMH,QAAQI,UAAAC,2BACVH,MAAII,MAAA,IAA3B,IAA6BF,UAAAG,MAAAD,MAAAF,UAAAI,KAAAC,MAAA,CAAA,IAAlBC,SAAQJ,MAAAK,MACfC,SAAWd,SAASpB,EAAE,IAAMgC,UAAUb,QACtCjB,IAAIM,MAAM,aAAewB,SAAW,SAAWE,UAC/Cb,QAAUA,QAAQc,QAAQH,SAAUE,SACxC,CAAC,CAAA,MAAAE,KAAAV,UAAAW,EAAAD,IAAA,CAAA,QAAAV,UAAAY,GAAA,CACDpC,IAAIM,MAAM,WAAaa,SACvB,IAAIkB,YAAcC,KAAKnB,SACvBX,KAAKS,KAAKoB,YAAYE,oBAAeC,EAAW,CAClEC,sBAAuB,EACvBC,sBAAuB,IACpB,IACW,GACH,GAAE,OACP,GAGJ,OAAOzC,cACX"}